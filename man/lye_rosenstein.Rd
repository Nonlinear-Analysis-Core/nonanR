% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{lye_rosenstein}
\alias{lye_rosenstein}
\title{Lyapunov Rosenstein Method}
\usage{
lye_rosenstein(X, samp_rate, mean_freq, nsteps, regpoints)
}
\arguments{
\item{X}{- A single column time series.}

\item{samp_rate}{- A double indicating the sampling rate of the time series.}

\item{mean_freq}{- A double indicating the mean frequency of the time series.}

\item{nsteps}{- Number of time steps to consider for calculating the Lyapunov exponent.}

\item{regpoints}{- Number of points to include in fitting a line on the divergence plot.}
}
\value{
The output of the algorithm is a list that includes:
\itemize{
 \item \code{lye} The Lyapunov exponent of the time series.
 \item \code{time_steps} A vector of the indices of the time steps used to calculate the Lyapunov exponent.
 \item \code{mean_distances} A vector of mean log distances used to calculate the Lyapunov exponent.
 \item \code{reg_points} A vector of the points included in fitting a line on the divergence plot.
}
}
\description{
Calculate Lyapunov exponent of a time series.
}
\details{
Lyapunov exponent is the rate of divergence between two neighboring points of a trajectory in a state space.
}
\examples{

fs = 100
t = seq(0, 10, 1/fs)
ts = sin(2*pi*10*t) + 2*cos(2*pi*5*t)

mean_frequency = meanfreq(signal = ts, samp_rate = fs)

maxDim = 10
rtol = 10
atol = 15
fnn_tol = 0.01

ami_out = ami(ts, ts, 50, 30)
tau = ami_out$tau[1,1] # Optimal time delay estimated by AMI

fnn_out = false_nearest_neighbors(ts, maxDim = maxDim, delay = tau, rtol = rtol, 
                                  atol = atol, fnn_tol = fnn_tol)

dim = fnn_out$dim # Optimal embedding dimension estimated by FNN

psr_length = length(ts) - tau*(dim-1)
start = 1
stop = psr_length
X = matrix(nrow = psr_length, ncol = dim)
for (i in 1:dim) {
  X[,i] = ts[start:stop]
  start = start + tau
  stop = stop + tau
}

lye_out = lye_rosenstein(X = X, samp_rate = fs, mean_freq = mean_frequency, 
                         nsteps = 500, regpoints = 10:500)

}
\references{
Rosenstein, M. T., Collins, J. J., & De Luca, C. J. (1993). A practical method for calculating largest Lyapunov exponents from small data sets. Physica D: Nonlinear Phenomena, 65(1-2), 117-134.
}
