// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ApproximateEntropy
arma::mat ApproximateEntropy(arma::colvec x, int dim, double R);
RcppExport SEXP _NONANr_ApproximateEntropy(SEXP xSEXP, SEXP dimSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(ApproximateEntropy(x, dim, R));
    return rcpp_result_gen;
END_RCPP
}
// SampleEntropy
arma::mat SampleEntropy(arma::colvec x, int m, double R);
RcppExport SEXP _NONANr_SampleEntropy(SEXP xSEXP, SEXP mSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(SampleEntropy(x, m, R));
    return rcpp_result_gen;
END_RCPP
}
// SymbolicEntropy
double SymbolicEntropy(arma::vec data, double thresholdVal, unsigned int seqLength);
RcppExport SEXP _NONANr_SymbolicEntropy(SEXP dataSEXP, SEXP thresholdValSEXP, SEXP seqLengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type thresholdVal(thresholdValSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seqLength(seqLengthSEXP);
    rcpp_result_gen = Rcpp::wrap(SymbolicEntropy(data, thresholdVal, seqLength));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NONANr_ApproximateEntropy", (DL_FUNC) &_NONANr_ApproximateEntropy, 3},
    {"_NONANr_SampleEntropy", (DL_FUNC) &_NONANr_SampleEntropy, 3},
    {"_NONANr_SymbolicEntropy", (DL_FUNC) &_NONANr_SymbolicEntropy, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_NONANr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
